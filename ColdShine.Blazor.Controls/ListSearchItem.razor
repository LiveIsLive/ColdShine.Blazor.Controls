@inherits SearchItem<object>

<table cellpadding="0" cellspacing="0" style="float:left;margin-right:10px">
	<tr>
		<td><RadzenLabel Text="@(this.Title+'：')" Component="@this.TextBoxName" /></td>
		<td><RadzenDropDown Data="this.DataSource" @bind-Value=this.Value Style="@this.Style" Name="@this.TextBoxName" TextProperty="@this.TextProperty" ValueProperty="@this.ValueProperty" /></td>
	</tr>
</table>

@code {
	public System.Collections.IEnumerable _Data = null!;
	[Microsoft.AspNetCore.Components.Parameter]
	public required System.Collections.IEnumerable Data
	{
		get
		{
			return this._Data;
		}
		set
		{
			if (this._Data == value)
				return;
			this._Data = value;
			this._DataSource = null!;
		}
	}

	private System.Collections.Generic.IEnumerable<object> _DataSource = null!;
	public System.Collections.Generic.IEnumerable<object> DataSource
	{
		get
		{
			if (this._DataSource == null)
				if (this.Data == null)
					this._DataSource = new object[0];
				else
				{
					object[] items = this.Data.Cast<object>().ToArray();
					if (items.FirstOrDefault() == null)
						this._DataSource = items;
					else this._DataSource = new object[] { null }.Concat(items).ToArray();
				}
			return this._DataSource;
		}
	}

	[Microsoft.AspNetCore.Components.Parameter]
	public object? Value { get; set; }

	[Microsoft.AspNetCore.Components.Parameter]
	public required string TextProperty { get; set; }

	[Microsoft.AspNetCore.Components.Parameter]
	public required string ValueProperty { get; set; }

	[Microsoft.AspNetCore.Components.Parameter]
	public virtual int? DropDownWidth { get; set; }

	protected string Style => $"width:{this.DropDownWidth}px";

	// [Microsoft.AspNetCore.Components.Parameter]
	// public Microsoft.AspNetCore.Components.EventCallback<string> ValueChanged { get; set; }

	public override void ResetValue()
	{
		this.Value = default(ValueType);
	}

	public override IEnumerable<ColdShine.Blazor.Models.Condition<object>> SimpleSearcherConditions
	{
		get
		{
			if (this.Value != null)
				yield return new() { Property = this.Property, Operator = ColdShine.Blazor.Models.Operators.EqualsOperator, Value = this.Value };
		}
	}
}
