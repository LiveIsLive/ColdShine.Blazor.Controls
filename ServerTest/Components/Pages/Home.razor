@page "/"

<PageTitle>Home</PageTitle>

<Searcher Query="this.Query">
	<TextSearchItem Title="姓名" Property="Name" />
	<DateRangeSearchItem Title="出生日期" Property="Birthday" />
	<EnumListSearchItem ValueType="Gender" Title="性别" Property="Gender" DropDownWidth="80" />
</Searcher>
<div style="clear:both"></div>
<RadzenTable>
	<RadzenTableHeader>
		<RadzenTableHeaderRow>
			<RadzenTableHeaderCell>Name</RadzenTableHeaderCell>
			<RadzenTableHeaderCell>Birthday</RadzenTableHeaderCell>
			<RadzenTableHeaderCell>Gender</RadzenTableHeaderCell>
		</RadzenTableHeaderRow>
	</RadzenTableHeader>
	<RadzenTableBody>
		@foreach (Person record in this.Records)
		{
			<RadzenTableRow>
				<RadzenTableCell>@record.Name</RadzenTableCell>
				<RadzenTableCell>@record.Birthday</RadzenTableCell>
				<RadzenTableCell>@record.Gender</RadzenTableCell>
			</RadzenTableRow>
		}
	</RadzenTableBody>
</RadzenTable>
<RadzenPager @ref=this.Pager Count="this.RecordCount" PageSize="this.PageSize" PageChanged="@PageChanged" />

@code
{
	public enum Gender{男,女}

	record Person(string Name, System.DateTime Birthday, Gender Gender);

	RadzenPager Pager = null!;

	ColdShine.Blazor.Models.ConditionCollection Conditions = new ColdShine.Blazor.Models.ConditionCollection();

	System.Collections.Generic.IEnumerable<Person> Records = new Person[0];

	int RecordCount;
	int PageIndex;
	int PageSize=3;

	protected override void OnInitialized()
	{
		this.BindList();
		base.OnInitialized();
	}

	void Query(ColdShine.Blazor.Models.ConditionCollection conditions)
	{
		this.Conditions = conditions;
		this.PageIndex = 0;
		this.Pager.FirstPage();
		this.BindList();
	}

	void PageChanged(PagerEventArgs args)
	{
		this.PageIndex = args.PageIndex;
		this.BindList();
	}

	void BindList()
	{
		this.Records = System.Text.Json.JsonSerializer.Deserialize<Person[]>(@"[
  {
	""Name"": ""Emily Rodriguez"",
	""Birthday"": ""1985-07-14T00:00:00"",
	""Gender"": 0
  },
  {
	""Name"": ""David Garcia"",
	""Birthday"": ""1978-11-03T00:00:00"",
	""Gender"": 1
  },
  {
	""Name"": ""Jennifer Smith"",
	""Birthday"": ""1992-05-22T00:00:00"",
	""Gender"": 0
  },
  {
	""Name"": ""Robert Wilson"",
	""Birthday"": ""1967-09-30T00:00:00"",
	""Gender"": 1
  },
  {
	""Name"": ""Lisa Johnson"",
	""Birthday"": ""1989-12-15T00:00:00"",
	""Gender"": 0
  },
  {
	""Name"": ""Michael Davis"",
	""Birthday"": ""1975-03-08T00:00:00"",
	""Gender"": 1
  },
  {
	""Name"": ""Sarah Miller"",
	""Birthday"": ""1995-08-19T00:00:00"",
	""Gender"": 0
  },
  {
	""Name"": ""John Williams"",
	""Birthday"": ""1982-01-25T00:00:00"",
	""Gender"": 1
  },
  {
	""Name"": ""William Brown"",
	""Birthday"": ""1963-10-11T00:00:00"",
	""Gender"": 0
  },
  {
	""Name"": ""Jane Jones"",
	""Birthday"": ""1990-04-05T00:00:00"",
	""Gender"": 1
  }
]")!;
		this.Records = this.Conditions.Where(this.Records);
		this.RecordCount=this.Records.Count();
		this.Records = this.Records.Skip(this.PageSize * this.PageIndex).Take(this.PageSize);
		//this.BindList();
		//this.StateHasChanged();
	}
}